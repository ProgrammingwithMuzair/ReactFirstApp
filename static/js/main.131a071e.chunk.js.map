{"version":3,"sources":["Hooks/useForm.js","CostomeHooks/UserForm.js","App.js","reportWebVitals.js","index.js"],"names":["useForm","value","useState","name","setname","onChange","e","target","UserForm","Fname","BindFname","ResetFname","Lname","BindLname","ResetLname","action","onSubmit","alert","htmlFor","type","id","placeholder","App","age","setage","salary","setsalary","useCallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAceA,EAZC,SAACC,GACb,MAAwBC,mBAASD,GAAjC,mBAAOE,EAAP,KAAaC,EAAb,KAQJ,MAAO,CAACD,EAJK,CACTA,OACAE,SAAW,SAAAC,GAAC,OAAIF,EAAQE,EAAEC,OAAON,SALvB,WACVG,EAAQH,MC6BGO,EA/BE,WAEb,MAA0CR,EAAQ,IAAlD,mBAAOS,EAAP,KAAeC,EAAf,KAA2BC,EAA3B,KACA,EAA0CX,EAAQ,IAAlD,mBAAOY,EAAP,KAAeC,EAAf,KAA2BC,EAA3B,KAOA,OACI,gCACI,iDACA,uBAAMC,OAAO,GAAGC,SATH,SAACV,GAClBW,MAAM,GAAD,OAAIR,EAAJ,YAAaG,EAAb,aACLD,IACAG,KAMI,UACA,gCACA,uBAAOI,QAAQ,QAAf,mBACA,+CAAOC,KAAK,OAAOC,GAAG,SAAYV,GAAlC,IAA6CW,YAAc,yBAE3D,gCAEA,uBAAOH,QAAQ,QAAf,mBACA,+CAAOC,KAAK,OAAOC,GAAG,SAAYP,GAAlC,IAA6CQ,YAAc,wBAE3D,8BACA,uBAAOF,KAAK,oBCqBTG,MAhCd,WACE,MAAsBpB,mBAAS,IAA/B,mBAAOqB,EAAP,KAAYC,EAAZ,KACA,EAA4BtB,mBAAS,KAArC,mBAAOuB,EAAP,KAAeC,EAAf,KAQD,OAPqBC,uBAAY,WAC/BH,EAAOD,EAAI,KACZ,CAACA,IACsBI,uBAAY,WAClCD,EAAUD,EAAO,OACjB,CAACA,IAGD,8BAeG,cAAC,EAAD,OC9BQG,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.131a071e.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\n\r\nconst useForm = (value) => {\r\n    const [name, setname] = useState(value);\r\nconst reset = ()=>{\r\n    setname(value);\r\n}\r\nconst bind = {\r\n    name,\r\n    onChange : e => setname(e.target.value)\r\n}\r\nreturn [name , bind , reset];\r\n}\r\n\r\nexport default useForm\r\n","import React,{useState} from 'react'\r\nimport useForm from '../Hooks/useForm';\r\n\r\nconst UserForm = () => {\r\n \r\n    const [Fname , BindFname , ResetFname] =  useForm('');\r\n    const [Lname , BindLname , ResetLname] =  useForm('');\r\n    const ClickHandler = (e)=>{\r\n        alert(`${Fname} ${Lname} Welcome`);\r\n        ResetFname();\r\n        ResetLname();\r\n    }\r\n \r\n    return (\r\n        <div>\r\n            <h1>User Login Form</h1>\r\n            <form action=\"\" onSubmit = {ClickHandler}>\r\n            <div>\r\n            <label htmlFor=\"Fname\">FName</label>\r\n            <input type=\"text\" id=\"Fname\" {...BindFname} placeholder = \"Enter First Name\" />\r\n            </div>\r\n            <div>\r\n\r\n            <label htmlFor=\"Fname\">LName</label>\r\n            <input type=\"text\" id=\"Lname\" {...BindLname} placeholder = \"Enter Last Name\"/>\r\n            </div>\r\n            <div>\r\n            <input type=\"submit\"/>\r\n            </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserForm\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport React,{useState , useCallback} from 'react'\n// import Users from './componenets/users'\n// import NestedLoop from './componenets/Nestedloop';\n// import Reducers from './UseReducers/reducers';\n// import FetchingData from './UseReducers/FetchingData';\nimport Title from './CallbackHook/Title';\nimport Age from './CallbackHook/age';\nimport AgeButton from './CallbackHook/AgeButton';\nimport Salary from './CallbackHook/Salary';\nimport Salarybtn from './CallbackHook/Salarybtn';\nimport ComponentOne from './CostomeHooks/ComponentOne';\nimport ComponentTwo from './CostomeHooks/ComponentTwo';\nimport UserForm from './CostomeHooks/UserForm';\n\n function App(){\n   const [age, setage] = useState(30);\n   const [salary, setsalary] = useState(50000);\nconst IncreamentAge =  useCallback(()=>{\n    setage(age+1);\n },[age])\nconst IncreamentSalary =  useCallback(()=>{\n    setsalary(salary+1000);\n  },[salary])\n   \n  return(\n    <div>\n    {/* <Users count = {count}/> */}\n    {/* <button onClick={()=>setcount(count+1)}>Click</button> */}\n       {/* <NestedLoop/> */}\n       {/* <Reducers/> */}\n       {/* <FetchingData/> */}\n\n       {/* <Title/>\n       <Age value = {age} />\n       <AgeButton handleClick = {IncreamentAge}/>\n       <Salary value = {salary}/>\n       <Salarybtn handleClick = {IncreamentSalary}/> */}\n\n       {/* <ComponentOne/> */}\n       {/* <ComponentTwo/> */}\n       <UserForm/>\n\n  </div>\n  )\n\n}\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}